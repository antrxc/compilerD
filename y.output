Terminals unused in grammar

    BOOL_CONST
    AUTO
    CASE
    CONST
    DEFAULT
    DO
    ENUM
    EXTERN
    GOTO
    REGISTER
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    VOLATILE
    LEFT_SHIFT_ASSIGN
    RIGHT_SHIFT_ASSIGN
    AND_ASSIGN
    XOR_ASSIGN
    OR_ASSIGN
    BIT_AND
    BIT_OR
    BIT_XOR
    LEFT_SHIFT
    RIGHT_SHIFT
    QUESTION
    COLON
    ARROW
    DOT
    ADDRESS
    POINTER
    LBRACKET
    RBRACKET
    ELLIPSIS


State 37 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier IDENTIFIER LPAREN parameter_list_opt RPAREN compound_statement

    7 parameter_list_opt: ε
    8                   | parameter_list

    9 parameter_list: parameter_declaration
   10               | parameter_list COMMA parameter_declaration

   11 parameter_declaration: type_specifier IDENTIFIER

   12 declaration: type_specifier init_declarator_list SEMICOLON

   13 init_declarator_list: init_declarator
   14                     | init_declarator_list COMMA init_declarator

   15 init_declarator: IDENTIFIER
   16                | IDENTIFIER ASSIGN expression

   17 type_specifier: VOID
   18               | CHAR
   19               | SHORT
   20               | INT
   21               | LONG
   22               | FLOAT_TYPE
   23               | DOUBLE
   24               | SIGNED
   25               | UNSIGNED

   26 compound_statement: LBRACE statement_list RBRACE

   27 statement_list: ε
   28               | statement_list statement

   29 statement: compound_statement
   30          | expression_statement
   31          | selection_statement
   32          | iteration_statement
   33          | jump_statement

   34 expression_statement: expression SEMICOLON
   35                     | SEMICOLON

   36 selection_statement: IF LPAREN expression RPAREN statement
   37                    | IF LPAREN expression RPAREN statement ELSE statement

   38 iteration_statement: WHILE LPAREN expression RPAREN statement
   39                    | FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN statement

   40 jump_statement: RETURN expression_opt SEMICOLON
   41               | BREAK SEMICOLON
   42               | CONTINUE SEMICOLON

   43 expression_opt: ε
   44               | expression

   45 expression: assignment_expression
   46           | expression COMMA assignment_expression

   47 assignment_expression: conditional_expression
   48                      | unary_expression assignment_operator assignment_expression

   49 assignment_operator: ASSIGN
   50                    | PLUS_ASSIGN
   51                    | MINUS_ASSIGN
   52                    | MUL_ASSIGN
   53                    | DIV_ASSIGN
   54                    | MOD_ASSIGN

   55 conditional_expression: logical_or_expression

   56 logical_or_expression: logical_and_expression
   57                      | logical_or_expression LOGICAL_OR logical_and_expression

   58 logical_and_expression: equality_expression
   59                       | logical_and_expression LOGICAL_AND equality_expression

   60 equality_expression: relational_expression
   61                    | equality_expression EQUAL relational_expression
   62                    | equality_expression NOT_EQUAL relational_expression

   63 relational_expression: additive_expression
   64                      | relational_expression LESS additive_expression
   65                      | relational_expression GREATER additive_expression
   66                      | relational_expression LESS_EQUAL additive_expression
   67                      | relational_expression GREATER_EQUAL additive_expression

   68 additive_expression: multiplicative_expression
   69                    | additive_expression PLUS multiplicative_expression
   70                    | additive_expression MINUS multiplicative_expression

   71 multiplicative_expression: unary_expression
   72                          | multiplicative_expression MULTIPLY unary_expression
   73                          | multiplicative_expression DIVIDE unary_expression
   74                          | multiplicative_expression MODULO unary_expression

   75 unary_expression: postfix_expression
   76                 | INCREMENT unary_expression
   77                 | DECREMENT unary_expression
   78                 | unary_operator cast_expression

   79 unary_operator: PLUS
   80               | MINUS
   81               | LOGICAL_NOT
   82               | BIT_NOT

   83 postfix_expression: primary_expression
   84                   | postfix_expression INCREMENT
   85                   | postfix_expression DECREMENT
   86                   | postfix_expression LPAREN argument_list_opt RPAREN

   87 primary_expression: IDENTIFIER
   88                   | INTEGER
   89                   | FLOAT_CONST
   90                   | CHAR_CONST
   91                   | STRING_LITERAL
   92                   | LPAREN expression RPAREN

   93 argument_list_opt: ε
   94                  | argument_list

   95 argument_list: assignment_expression
   96              | argument_list COMMA assignment_expression

   97 cast_expression: unary_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <integer> (258) 88
    BOOL_CONST <integer> (259)
    FLOAT_CONST <float_val> (260) 89
    CHAR_CONST <character> (261) 90
    STRING_LITERAL <string> (262) 91
    IDENTIFIER <string> (263) 6 11 15 16 87
    AUTO (264)
    BREAK (265) 41
    CASE (266)
    CHAR (267) 18
    CONST (268)
    CONTINUE (269) 42
    DEFAULT (270)
    DO (271)
    DOUBLE (272) 23
    ELSE (273) 37
    ENUM (274)
    EXTERN (275)
    FLOAT_TYPE (276) 22
    FOR (277) 39
    GOTO (278)
    IF (279) 36 37
    INT (280) 20
    LONG (281) 21
    REGISTER (282)
    RETURN (283) 40
    SHORT (284) 19
    SIGNED (285) 24
    SIZEOF (286)
    STATIC (287)
    STRUCT (288)
    SWITCH (289)
    TYPEDEF (290)
    UNION (291)
    UNSIGNED (292) 25
    VOID (293) 17
    VOLATILE (294)
    WHILE (295) 38
    PLUS (296) 69 79
    MINUS (297) 70 80
    MULTIPLY (298) 72
    DIVIDE (299) 73
    MODULO (300) 74
    INCREMENT (301) 76 84
    DECREMENT (302) 77 85
    ASSIGN (303) 16 49
    PLUS_ASSIGN (304) 50
    MINUS_ASSIGN (305) 51
    MUL_ASSIGN (306) 52
    DIV_ASSIGN (307) 53
    MOD_ASSIGN (308) 54
    LEFT_SHIFT_ASSIGN (309)
    RIGHT_SHIFT_ASSIGN (310)
    AND_ASSIGN (311)
    XOR_ASSIGN (312)
    OR_ASSIGN (313)
    EQUAL (314) 61
    NOT_EQUAL (315) 62
    GREATER (316) 65
    LESS (317) 64
    GREATER_EQUAL (318) 67
    LESS_EQUAL (319) 66
    LOGICAL_AND (320) 59
    LOGICAL_OR (321) 57
    LOGICAL_NOT (322) 81
    BIT_AND (323)
    BIT_OR (324)
    BIT_XOR (325)
    LEFT_SHIFT (326)
    RIGHT_SHIFT (327)
    BIT_NOT (328) 82
    QUESTION (329)
    COLON (330)
    ARROW (331)
    DOT (332)
    ADDRESS (333)
    POINTER (334)
    LPAREN (335) 6 36 37 38 39 86 92
    RPAREN (336) 6 36 37 38 39 86 92
    LBRACE (337) 26
    RBRACE (338) 26
    LBRACKET (339)
    RBRACKET (340)
    COMMA (341) 10 14 46 96
    SEMICOLON (342) 12 34 35 39 40 41 42
    ELLIPSIS (343)


Nonterminals, with rules where they appear

    $accept (89)
        on left: 0
    program (90)
        on left: 1
        on right: 0
    translation_unit (91)
        on left: 2 3
        on right: 1 3
    external_declaration (92)
        on left: 4 5
        on right: 2 3
    function_definition (93)
        on left: 6
        on right: 4
    parameter_list_opt (94)
        on left: 7 8
        on right: 6
    parameter_list (95)
        on left: 9 10
        on right: 8 10
    parameter_declaration (96)
        on left: 11
        on right: 9 10
    declaration (97)
        on left: 12
        on right: 5
    init_declarator_list (98)
        on left: 13 14
        on right: 12 14
    init_declarator (99)
        on left: 15 16
        on right: 13 14
    type_specifier (100)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 6 11 12
    compound_statement (101)
        on left: 26
        on right: 6 29
    statement_list (102)
        on left: 27 28
        on right: 26 28
    statement (103)
        on left: 29 30 31 32 33
        on right: 28 36 37 38 39
    expression_statement (104)
        on left: 34 35
        on right: 30
    selection_statement (105)
        on left: 36 37
        on right: 31
    iteration_statement (106)
        on left: 38 39
        on right: 32
    jump_statement (107)
        on left: 40 41 42
        on right: 33
    expression_opt (108)
        on left: 43 44
        on right: 39 40
    expression (109)
        on left: 45 46
        on right: 16 34 36 37 38 44 46 92
    assignment_expression (110)
        on left: 47 48
        on right: 45 46 48 95 96
    assignment_operator (111)
        on left: 49 50 51 52 53 54
        on right: 48
    conditional_expression (112)
        on left: 55
        on right: 47
    logical_or_expression (113)
        on left: 56 57
        on right: 55 57
    logical_and_expression (114)
        on left: 58 59
        on right: 56 57 59
    equality_expression (115)
        on left: 60 61 62
        on right: 58 59 61 62
    relational_expression (116)
        on left: 63 64 65 66 67
        on right: 60 61 62 64 65 66 67
    additive_expression (117)
        on left: 68 69 70
        on right: 63 64 65 66 67 69 70
    multiplicative_expression (118)
        on left: 71 72 73 74
        on right: 68 69 70 72 73 74
    unary_expression (119)
        on left: 75 76 77 78
        on right: 48 71 72 73 74 76 77 97
    unary_operator (120)
        on left: 79 80 81 82
        on right: 78
    postfix_expression (121)
        on left: 83 84 85 86
        on right: 75 84 85 86
    primary_expression (122)
        on left: 87 88 89 90 91 92
        on right: 83
    argument_list_opt (123)
        on left: 93 94
        on right: 86
    argument_list (124)
        on left: 95 96
        on right: 94 96
    cast_expression (125)
        on left: 97
        on right: 78


State 0

    0 $accept: • program $end

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    FLOAT_TYPE  shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    SHORT       shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9

    program               go to state 10
    translation_unit      go to state 11
    external_declaration  go to state 12
    function_definition   go to state 13
    declaration           go to state 14
    type_specifier        go to state 15


State 1

   18 type_specifier: CHAR •

    $default  reduce using rule 18 (type_specifier)


State 2

   23 type_specifier: DOUBLE •

    $default  reduce using rule 23 (type_specifier)


State 3

   22 type_specifier: FLOAT_TYPE •

    $default  reduce using rule 22 (type_specifier)


State 4

   20 type_specifier: INT •

    $default  reduce using rule 20 (type_specifier)


State 5

   21 type_specifier: LONG •

    $default  reduce using rule 21 (type_specifier)


State 6

   19 type_specifier: SHORT •

    $default  reduce using rule 19 (type_specifier)


State 7

   24 type_specifier: SIGNED •

    $default  reduce using rule 24 (type_specifier)


State 8

   25 type_specifier: UNSIGNED •

    $default  reduce using rule 25 (type_specifier)


State 9

   17 type_specifier: VOID •

    $default  reduce using rule 17 (type_specifier)


State 10

    0 $accept: program • $end

    $end  shift, and go to state 16


State 11

    1 program: translation_unit •
    3 translation_unit: translation_unit • external_declaration

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    FLOAT_TYPE  shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    SHORT       shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9

    $default  reduce using rule 1 (program)

    external_declaration  go to state 17
    function_definition   go to state 13
    declaration           go to state 14
    type_specifier        go to state 15


State 12

    2 translation_unit: external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 13

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 14

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 15

    6 function_definition: type_specifier • IDENTIFIER LPAREN parameter_list_opt RPAREN compound_statement
   12 declaration: type_specifier • init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 18

    init_declarator_list  go to state 19
    init_declarator       go to state 20


State 16

    0 $accept: program $end •

    $default  accept


State 17

    3 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 3 (translation_unit)


State 18

    6 function_definition: type_specifier IDENTIFIER • LPAREN parameter_list_opt RPAREN compound_statement
   15 init_declarator: IDENTIFIER •
   16                | IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 21
    LPAREN  shift, and go to state 22

    $default  reduce using rule 15 (init_declarator)


State 19

   12 declaration: type_specifier init_declarator_list • SEMICOLON
   14 init_declarator_list: init_declarator_list • COMMA init_declarator

    COMMA      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 20

   13 init_declarator_list: init_declarator •

    $default  reduce using rule 13 (init_declarator_list)


State 21

   16 init_declarator: IDENTIFIER ASSIGN • expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    expression                 go to state 37
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 22

    6 function_definition: type_specifier IDENTIFIER LPAREN • parameter_list_opt RPAREN compound_statement

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    FLOAT_TYPE  shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    SHORT       shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9

    $default  reduce using rule 7 (parameter_list_opt)

    parameter_list_opt     go to state 50
    parameter_list         go to state 51
    parameter_declaration  go to state 52
    type_specifier         go to state 53


State 23

   14 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER  shift, and go to state 54

    init_declarator  go to state 55


State 24

   12 declaration: type_specifier init_declarator_list SEMICOLON •

    $default  reduce using rule 12 (declaration)


State 25

   88 primary_expression: INTEGER •

    $default  reduce using rule 88 (primary_expression)


State 26

   89 primary_expression: FLOAT_CONST •

    $default  reduce using rule 89 (primary_expression)


State 27

   90 primary_expression: CHAR_CONST •

    $default  reduce using rule 90 (primary_expression)


State 28

   91 primary_expression: STRING_LITERAL •

    $default  reduce using rule 91 (primary_expression)


State 29

   87 primary_expression: IDENTIFIER •

    $default  reduce using rule 87 (primary_expression)


State 30

   79 unary_operator: PLUS •

    $default  reduce using rule 79 (unary_operator)


State 31

   80 unary_operator: MINUS •

    $default  reduce using rule 80 (unary_operator)


State 32

   76 unary_expression: INCREMENT • unary_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 56
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49


State 33

   77 unary_expression: DECREMENT • unary_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 57
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49


State 34

   81 unary_operator: LOGICAL_NOT •

    $default  reduce using rule 81 (unary_operator)


State 35

   82 unary_operator: BIT_NOT •

    $default  reduce using rule 82 (unary_operator)


State 36

   92 primary_expression: LPAREN • expression RPAREN

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    expression                 go to state 58
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 37

   16 init_declarator: IDENTIFIER ASSIGN expression •
   46 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 59

    COMMA     [reduce using rule 16 (init_declarator)]
    $default  reduce using rule 16 (init_declarator)


State 38

   45 expression: assignment_expression •

    $default  reduce using rule 45 (expression)


State 39

   47 assignment_expression: conditional_expression •

    $default  reduce using rule 47 (assignment_expression)


State 40

   55 conditional_expression: logical_or_expression •
   57 logical_or_expression: logical_or_expression • LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 60

    $default  reduce using rule 55 (conditional_expression)


State 41

   56 logical_or_expression: logical_and_expression •
   59 logical_and_expression: logical_and_expression • LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 61

    $default  reduce using rule 56 (logical_or_expression)


State 42

   58 logical_and_expression: equality_expression •
   61 equality_expression: equality_expression • EQUAL relational_expression
   62                    | equality_expression • NOT_EQUAL relational_expression

    EQUAL      shift, and go to state 62
    NOT_EQUAL  shift, and go to state 63

    $default  reduce using rule 58 (logical_and_expression)


State 43

   60 equality_expression: relational_expression •
   64 relational_expression: relational_expression • LESS additive_expression
   65                      | relational_expression • GREATER additive_expression
   66                      | relational_expression • LESS_EQUAL additive_expression
   67                      | relational_expression • GREATER_EQUAL additive_expression

    GREATER        shift, and go to state 64
    LESS           shift, and go to state 65
    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67

    $default  reduce using rule 60 (equality_expression)


State 44

   63 relational_expression: additive_expression •
   69 additive_expression: additive_expression • PLUS multiplicative_expression
   70                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 63 (relational_expression)


State 45

   68 additive_expression: multiplicative_expression •
   72 multiplicative_expression: multiplicative_expression • MULTIPLY unary_expression
   73                          | multiplicative_expression • DIVIDE unary_expression
   74                          | multiplicative_expression • MODULO unary_expression

    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71
    MODULO    shift, and go to state 72

    $default  reduce using rule 68 (additive_expression)


State 46

   48 assignment_expression: unary_expression • assignment_operator assignment_expression
   71 multiplicative_expression: unary_expression •

    ASSIGN        shift, and go to state 73
    PLUS_ASSIGN   shift, and go to state 74
    MINUS_ASSIGN  shift, and go to state 75
    MUL_ASSIGN    shift, and go to state 76
    DIV_ASSIGN    shift, and go to state 77
    MOD_ASSIGN    shift, and go to state 78

    $default  reduce using rule 71 (multiplicative_expression)

    assignment_operator  go to state 79


State 47

   78 unary_expression: unary_operator • cast_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 80
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    cast_expression     go to state 81


State 48

   75 unary_expression: postfix_expression •
   84 postfix_expression: postfix_expression • INCREMENT
   85                   | postfix_expression • DECREMENT
   86                   | postfix_expression • LPAREN argument_list_opt RPAREN

    INCREMENT  shift, and go to state 82
    DECREMENT  shift, and go to state 83
    LPAREN     shift, and go to state 84

    $default  reduce using rule 75 (unary_expression)


State 49

   83 postfix_expression: primary_expression •

    $default  reduce using rule 83 (postfix_expression)


State 50

    6 function_definition: type_specifier IDENTIFIER LPAREN parameter_list_opt • RPAREN compound_statement

    RPAREN  shift, and go to state 85


State 51

    8 parameter_list_opt: parameter_list •
   10 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 86

    $default  reduce using rule 8 (parameter_list_opt)


State 52

    9 parameter_list: parameter_declaration •

    $default  reduce using rule 9 (parameter_list)


State 53

   11 parameter_declaration: type_specifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 54

   15 init_declarator: IDENTIFIER •
   16                | IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 15 (init_declarator)


State 55

   14 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 14 (init_declarator_list)


State 56

   76 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 76 (unary_expression)


State 57

   77 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 77 (unary_expression)


State 58

   46 expression: expression • COMMA assignment_expression
   92 primary_expression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 88
    COMMA   shift, and go to state 59


State 59

   46 expression: expression COMMA • assignment_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    assignment_expression      go to state 89
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 60

   57 logical_or_expression: logical_or_expression LOGICAL_OR • logical_and_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    logical_and_expression     go to state 90
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 61

   59 logical_and_expression: logical_and_expression LOGICAL_AND • equality_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    equality_expression        go to state 92
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 62

   61 equality_expression: equality_expression EQUAL • relational_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    relational_expression      go to state 93
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 63

   62 equality_expression: equality_expression NOT_EQUAL • relational_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    relational_expression      go to state 94
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 64

   65 relational_expression: relational_expression GREATER • additive_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    additive_expression        go to state 95
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 65

   64 relational_expression: relational_expression LESS • additive_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    additive_expression        go to state 96
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 66

   67 relational_expression: relational_expression GREATER_EQUAL • additive_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    additive_expression        go to state 97
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 67

   66 relational_expression: relational_expression LESS_EQUAL • additive_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    additive_expression        go to state 98
    multiplicative_expression  go to state 45
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 68

   69 additive_expression: additive_expression PLUS • multiplicative_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    multiplicative_expression  go to state 99
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 69

   70 additive_expression: additive_expression MINUS • multiplicative_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    multiplicative_expression  go to state 100
    unary_expression           go to state 91
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 70

   72 multiplicative_expression: multiplicative_expression MULTIPLY • unary_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 101
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49


State 71

   73 multiplicative_expression: multiplicative_expression DIVIDE • unary_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 102
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49


State 72

   74 multiplicative_expression: multiplicative_expression MODULO • unary_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    unary_expression    go to state 103
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49


State 73

   49 assignment_operator: ASSIGN •

    $default  reduce using rule 49 (assignment_operator)


State 74

   50 assignment_operator: PLUS_ASSIGN •

    $default  reduce using rule 50 (assignment_operator)


State 75

   51 assignment_operator: MINUS_ASSIGN •

    $default  reduce using rule 51 (assignment_operator)


State 76

   52 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 52 (assignment_operator)


State 77

   53 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 53 (assignment_operator)


State 78

   54 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 54 (assignment_operator)


State 79

   48 assignment_expression: unary_expression assignment_operator • assignment_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    assignment_expression      go to state 104
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 80

   97 cast_expression: unary_expression •

    $default  reduce using rule 97 (cast_expression)


State 81

   78 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 78 (unary_expression)


State 82

   84 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 84 (postfix_expression)


State 83

   85 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 85 (postfix_expression)


State 84

   86 postfix_expression: postfix_expression LPAREN • argument_list_opt RPAREN

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    $default  reduce using rule 93 (argument_list_opt)

    assignment_expression      go to state 105
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    argument_list_opt          go to state 106
    argument_list              go to state 107


State 85

    6 function_definition: type_specifier IDENTIFIER LPAREN parameter_list_opt RPAREN • compound_statement

    LBRACE  shift, and go to state 108

    compound_statement  go to state 109


State 86

   10 parameter_list: parameter_list COMMA • parameter_declaration

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    FLOAT_TYPE  shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    SHORT       shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9

    parameter_declaration  go to state 110
    type_specifier         go to state 53


State 87

   11 parameter_declaration: type_specifier IDENTIFIER •

    $default  reduce using rule 11 (parameter_declaration)


State 88

   92 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 92 (primary_expression)


State 89

   46 expression: expression COMMA assignment_expression •

    $default  reduce using rule 46 (expression)


State 90

   57 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression •
   59 logical_and_expression: logical_and_expression • LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 61

    $default  reduce using rule 57 (logical_or_expression)


State 91

   71 multiplicative_expression: unary_expression •

    $default  reduce using rule 71 (multiplicative_expression)


State 92

   59 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression •
   61 equality_expression: equality_expression • EQUAL relational_expression
   62                    | equality_expression • NOT_EQUAL relational_expression

    EQUAL      shift, and go to state 62
    NOT_EQUAL  shift, and go to state 63

    $default  reduce using rule 59 (logical_and_expression)


State 93

   61 equality_expression: equality_expression EQUAL relational_expression •
   64 relational_expression: relational_expression • LESS additive_expression
   65                      | relational_expression • GREATER additive_expression
   66                      | relational_expression • LESS_EQUAL additive_expression
   67                      | relational_expression • GREATER_EQUAL additive_expression

    GREATER        shift, and go to state 64
    LESS           shift, and go to state 65
    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67

    $default  reduce using rule 61 (equality_expression)


State 94

   62 equality_expression: equality_expression NOT_EQUAL relational_expression •
   64 relational_expression: relational_expression • LESS additive_expression
   65                      | relational_expression • GREATER additive_expression
   66                      | relational_expression • LESS_EQUAL additive_expression
   67                      | relational_expression • GREATER_EQUAL additive_expression

    GREATER        shift, and go to state 64
    LESS           shift, and go to state 65
    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67

    $default  reduce using rule 62 (equality_expression)


State 95

   65 relational_expression: relational_expression GREATER additive_expression •
   69 additive_expression: additive_expression • PLUS multiplicative_expression
   70                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 65 (relational_expression)


State 96

   64 relational_expression: relational_expression LESS additive_expression •
   69 additive_expression: additive_expression • PLUS multiplicative_expression
   70                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 64 (relational_expression)


State 97

   67 relational_expression: relational_expression GREATER_EQUAL additive_expression •
   69 additive_expression: additive_expression • PLUS multiplicative_expression
   70                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 67 (relational_expression)


State 98

   66 relational_expression: relational_expression LESS_EQUAL additive_expression •
   69 additive_expression: additive_expression • PLUS multiplicative_expression
   70                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 66 (relational_expression)


State 99

   69 additive_expression: additive_expression PLUS multiplicative_expression •
   72 multiplicative_expression: multiplicative_expression • MULTIPLY unary_expression
   73                          | multiplicative_expression • DIVIDE unary_expression
   74                          | multiplicative_expression • MODULO unary_expression

    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71
    MODULO    shift, and go to state 72

    $default  reduce using rule 69 (additive_expression)


State 100

   70 additive_expression: additive_expression MINUS multiplicative_expression •
   72 multiplicative_expression: multiplicative_expression • MULTIPLY unary_expression
   73                          | multiplicative_expression • DIVIDE unary_expression
   74                          | multiplicative_expression • MODULO unary_expression

    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71
    MODULO    shift, and go to state 72

    $default  reduce using rule 70 (additive_expression)


State 101

   72 multiplicative_expression: multiplicative_expression MULTIPLY unary_expression •

    $default  reduce using rule 72 (multiplicative_expression)


State 102

   73 multiplicative_expression: multiplicative_expression DIVIDE unary_expression •

    $default  reduce using rule 73 (multiplicative_expression)


State 103

   74 multiplicative_expression: multiplicative_expression MODULO unary_expression •

    $default  reduce using rule 74 (multiplicative_expression)


State 104

   48 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 48 (assignment_expression)


State 105

   95 argument_list: assignment_expression •

    $default  reduce using rule 95 (argument_list)


State 106

   86 postfix_expression: postfix_expression LPAREN argument_list_opt • RPAREN

    RPAREN  shift, and go to state 111


State 107

   94 argument_list_opt: argument_list •
   96 argument_list: argument_list • COMMA assignment_expression

    COMMA  shift, and go to state 112

    $default  reduce using rule 94 (argument_list_opt)


State 108

   26 compound_statement: LBRACE • statement_list RBRACE

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 113


State 109

    6 function_definition: type_specifier IDENTIFIER LPAREN parameter_list_opt RPAREN compound_statement •

    $default  reduce using rule 6 (function_definition)


State 110

   10 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 10 (parameter_list)


State 111

   86 postfix_expression: postfix_expression LPAREN argument_list_opt RPAREN •

    $default  reduce using rule 86 (postfix_expression)


State 112

   96 argument_list: argument_list COMMA • assignment_expression

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    assignment_expression      go to state 114
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 113

   26 compound_statement: LBRACE statement_list • RBRACE
   28 statement_list: statement_list • statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    BREAK           shift, and go to state 115
    CONTINUE        shift, and go to state 116
    FOR             shift, and go to state 117
    IF              shift, and go to state 118
    RETURN          shift, and go to state 119
    WHILE           shift, and go to state 120
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36
    LBRACE          shift, and go to state 108
    RBRACE          shift, and go to state 121
    SEMICOLON       shift, and go to state 122

    compound_statement         go to state 123
    statement                  go to state 124
    expression_statement       go to state 125
    selection_statement        go to state 126
    iteration_statement        go to state 127
    jump_statement             go to state 128
    expression                 go to state 129
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 114

   96 argument_list: argument_list COMMA assignment_expression •

    $default  reduce using rule 96 (argument_list)


State 115

   41 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 116

   42 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 131


State 117

   39 iteration_statement: FOR • LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN statement

    LPAREN  shift, and go to state 132


State 118

   36 selection_statement: IF • LPAREN expression RPAREN statement
   37                    | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 133


State 119

   40 jump_statement: RETURN • expression_opt SEMICOLON

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    $default  reduce using rule 43 (expression_opt)

    expression_opt             go to state 134
    expression                 go to state 135
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 120

   38 iteration_statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 136


State 121

   26 compound_statement: LBRACE statement_list RBRACE •

    $default  reduce using rule 26 (compound_statement)


State 122

   35 expression_statement: SEMICOLON •

    $default  reduce using rule 35 (expression_statement)


State 123

   29 statement: compound_statement •

    $default  reduce using rule 29 (statement)


State 124

   28 statement_list: statement_list statement •

    $default  reduce using rule 28 (statement_list)


State 125

   30 statement: expression_statement •

    $default  reduce using rule 30 (statement)


State 126

   31 statement: selection_statement •

    $default  reduce using rule 31 (statement)


State 127

   32 statement: iteration_statement •

    $default  reduce using rule 32 (statement)


State 128

   33 statement: jump_statement •

    $default  reduce using rule 33 (statement)


State 129

   34 expression_statement: expression • SEMICOLON
   46 expression: expression • COMMA assignment_expression

    COMMA      shift, and go to state 59
    SEMICOLON  shift, and go to state 137


State 130

   41 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 41 (jump_statement)


State 131

   42 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 42 (jump_statement)


State 132

   39 iteration_statement: FOR LPAREN • expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    $default  reduce using rule 43 (expression_opt)

    expression_opt             go to state 138
    expression                 go to state 135
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 133

   36 selection_statement: IF LPAREN • expression RPAREN statement
   37                    | IF LPAREN • expression RPAREN statement ELSE statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    expression                 go to state 139
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 134

   40 jump_statement: RETURN expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 140


State 135

   44 expression_opt: expression •
   46 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 59

    $default  reduce using rule 44 (expression_opt)


State 136

   38 iteration_statement: WHILE LPAREN • expression RPAREN statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    expression                 go to state 141
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 137

   34 expression_statement: expression SEMICOLON •

    $default  reduce using rule 34 (expression_statement)


State 138

   39 iteration_statement: FOR LPAREN expression_opt • SEMICOLON expression_opt SEMICOLON expression_opt RPAREN statement

    SEMICOLON  shift, and go to state 142


State 139

   36 selection_statement: IF LPAREN expression • RPAREN statement
   37                    | IF LPAREN expression • RPAREN statement ELSE statement
   46 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 143
    COMMA   shift, and go to state 59


State 140

   40 jump_statement: RETURN expression_opt SEMICOLON •

    $default  reduce using rule 40 (jump_statement)


State 141

   38 iteration_statement: WHILE LPAREN expression • RPAREN statement
   46 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 144
    COMMA   shift, and go to state 59


State 142

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON • expression_opt SEMICOLON expression_opt RPAREN statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    $default  reduce using rule 43 (expression_opt)

    expression_opt             go to state 145
    expression                 go to state 135
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 143

   36 selection_statement: IF LPAREN expression RPAREN • statement
   37                    | IF LPAREN expression RPAREN • statement ELSE statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    BREAK           shift, and go to state 115
    CONTINUE        shift, and go to state 116
    FOR             shift, and go to state 117
    IF              shift, and go to state 118
    RETURN          shift, and go to state 119
    WHILE           shift, and go to state 120
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36
    LBRACE          shift, and go to state 108
    SEMICOLON       shift, and go to state 122

    compound_statement         go to state 123
    statement                  go to state 146
    expression_statement       go to state 125
    selection_statement        go to state 126
    iteration_statement        go to state 127
    jump_statement             go to state 128
    expression                 go to state 129
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 144

   38 iteration_statement: WHILE LPAREN expression RPAREN • statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    BREAK           shift, and go to state 115
    CONTINUE        shift, and go to state 116
    FOR             shift, and go to state 117
    IF              shift, and go to state 118
    RETURN          shift, and go to state 119
    WHILE           shift, and go to state 120
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36
    LBRACE          shift, and go to state 108
    SEMICOLON       shift, and go to state 122

    compound_statement         go to state 123
    statement                  go to state 147
    expression_statement       go to state 125
    selection_statement        go to state 126
    iteration_statement        go to state 127
    jump_statement             go to state 128
    expression                 go to state 129
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 145

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON expression_opt • SEMICOLON expression_opt RPAREN statement

    SEMICOLON  shift, and go to state 148


State 146

   36 selection_statement: IF LPAREN expression RPAREN statement •
   37                    | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 36 (selection_statement)]
    $default  reduce using rule 36 (selection_statement)


State 147

   38 iteration_statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 38 (iteration_statement)


State 148

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON • expression_opt RPAREN statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36

    $default  reduce using rule 43 (expression_opt)

    expression_opt             go to state 150
    expression                 go to state 135
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 149

   37 selection_statement: IF LPAREN expression RPAREN statement ELSE • statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    BREAK           shift, and go to state 115
    CONTINUE        shift, and go to state 116
    FOR             shift, and go to state 117
    IF              shift, and go to state 118
    RETURN          shift, and go to state 119
    WHILE           shift, and go to state 120
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36
    LBRACE          shift, and go to state 108
    SEMICOLON       shift, and go to state 122

    compound_statement         go to state 123
    statement                  go to state 151
    expression_statement       go to state 125
    selection_statement        go to state 126
    iteration_statement        go to state 127
    jump_statement             go to state 128
    expression                 go to state 129
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 150

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt • RPAREN statement

    RPAREN  shift, and go to state 152


State 151

   37 selection_statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 37 (selection_statement)


State 152

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN • statement

    INTEGER         shift, and go to state 25
    FLOAT_CONST     shift, and go to state 26
    CHAR_CONST      shift, and go to state 27
    STRING_LITERAL  shift, and go to state 28
    IDENTIFIER      shift, and go to state 29
    BREAK           shift, and go to state 115
    CONTINUE        shift, and go to state 116
    FOR             shift, and go to state 117
    IF              shift, and go to state 118
    RETURN          shift, and go to state 119
    WHILE           shift, and go to state 120
    PLUS            shift, and go to state 30
    MINUS           shift, and go to state 31
    INCREMENT       shift, and go to state 32
    DECREMENT       shift, and go to state 33
    LOGICAL_NOT     shift, and go to state 34
    BIT_NOT         shift, and go to state 35
    LPAREN          shift, and go to state 36
    LBRACE          shift, and go to state 108
    SEMICOLON       shift, and go to state 122

    compound_statement         go to state 123
    statement                  go to state 153
    expression_statement       go to state 125
    selection_statement        go to state 126
    iteration_statement        go to state 127
    jump_statement             go to state 128
    expression                 go to state 129
    assignment_expression      go to state 38
    conditional_expression     go to state 39
    logical_or_expression      go to state 40
    logical_and_expression     go to state 41
    equality_expression        go to state 42
    relational_expression      go to state 43
    additive_expression        go to state 44
    multiplicative_expression  go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49


State 153

   39 iteration_statement: FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN statement •

    $default  reduce using rule 39 (iteration_statement)
